argo-cd:
  fullnameOverride: argocd

  global:
    image:
      tag: "v3.0.6"

  configs:
    cm:
      url: https://argocd.panicboat.net
      application.instanceLabelKey: argocd.argoproj.io/instance
      server.rbac.log.enforce.enable: "false"
      exec.enabled: "false"
      admin.enabled: "true"
      timeout.reconciliation: 180s

    params:
      server.insecure: "false"
      server.grpc.web: "true"

  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: false

    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  dex:
    enabled: false

  server:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: false

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        nginx.ingress.kubernetes.io/grpc-backend: "true"
      hosts:
        - argocd.panicboat.net
      tls:
        - secretName: argocd-server-tls
          hosts:
            - argocd.panicboat.net

  repoServer:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: false

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi

  applicationSet:
    enabled: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: false

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi

  notifications:
    enabled: false
